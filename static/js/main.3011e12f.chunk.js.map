{"version":3,"sources":["components/WelcomeInfo.js","placesData.js","components/Place.js","util/GeocodeByAdress.js","components/SearchBar.js","components/PlaceContainer.js","components/Map.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["WelcomeInfo","react_default","a","createElement","id","canvas","document","setAttribute","className","width","window","innerWidth","height","innerHeight","getContext","fillRect","body","appendChild","overlayCanvas","onclick","closeOverlay","openOverlay","onClick","style","position","right","top","border","background","fontFamily","fontWeight","fontSize","href","welcomeDiv","getElementById","opacity","parentNode","removeChild","placesData","name","pos","lat","lng","Place","props","cursor","currentZoom","map","getZoom","offset","setTimeout","setZoom","panTo","handleDelete","marginTop","left","geocodeByAddress","address","geocoder","google","maps","Geocoder","OK","GeocoderStatus","Promise","resolve","reject","geocode","results","status","getLatLng","result","geometry","location","e","SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","value","target","setState","query","handleClick","placeData","state","handleAddPlace","getPos","_ref","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","then","_ref2","_callee","_context","abrupt","sent","stop","_x2","apply","arguments","latLng","_x","handlePlaceSelect","_callee3","_context3","autocomplete","getPlace","formatted_address","_this2","addListener","type","placeholder","onChange","React","Component","PlaceContainer","places","place","index","components_Place","key","handleDeletePlace","bind","components_SearchBar","Map","MainContainer","initMaps","center","zoom","setOptions","minZoom","maxZoom","Autocomplete","setFields","markers","addMarker","loadMaps","url","getElementsByTagName","script","src","async","defer","insertBefore","loadScript","marker","Marker","title","infowindow","close","InfoWindow","content","concat","open","prevState","toConsumableArray","removeMarker","console","log","filter","element","setMap","_event$target","defineProperty","uniquePlaceId","updatedPlaces","updatedMarkers","splice","components_PlaceContainer","components_Map","App","components_WelcomeInfo","components_MainContainer","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3011e12f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst  WelcomeInfo = () => {\r\n  return (\r\n    <div id=\"welcome\">\r\n      {openOverlay()}\r\n    <button className=\"xButton\"\r\n      onClick={closeOverlay} \r\n      style={{position: 'absolute', right: '2%', top: '3%', border: '0px', background: 'none', fontFamily: 'Quicksand', fontWeight: '600', fontSize: \r\n      '1.1em'}}> X </button>\r\n    <div>\r\n      <p>Welcome to travel destination keeper!</p>\r\n\r\n      <p>Do you like travelling? Exploring new places? Living a life of an adventurer? \r\n      <p>Of course, we all do! :)</p>\r\n      Unfortunately, with current situation our possibilities for an adventure are usually limited to going out for groceries, or taking a walk to the park.</p>\r\n\r\n      <p>But all this will eventually end. And until it does - you can use all the time you want to plan your future travels :) This simple app allows you to search for places and add them to your \"to visit\" list. Feel free to move around and explore!</p>\r\n\r\n      <p>The app uses Google Maps Javascript API as a provider for map, autocomplete and marker functionalities. It is developed using pure React. Decision to not use redux was aimed to enforce a strong design of parent/children strategy, plan data flow and distribute state adequately.</p>\r\n      <p>source: <a href=\"https://github.com/filswa/travel-destination-keeper\"> https://github.com/filswa/travel-destination-keeper</a></p>\r\n    </div>\r\n  </div>\r\n  )\r\n};\r\n\r\nexport default WelcomeInfo;\r\n\r\nfunction openOverlay() {\r\n  let canvas = document.createElement(\"canvas\");\r\n  canvas.setAttribute(\"id\", \"canvas\")\r\n\r\n  canvas.className = \"highlight\";\r\n  canvas.width = window.innerWidth;\r\n  canvas.height = window.innerHeight;\r\n  let ctx = canvas.getContext(\"2d\");\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  document.body.appendChild(canvas);\r\n  window.overlayCanvas = canvas;\r\n  canvas.onclick = closeOverlay;\r\n}\r\n\r\nfunction closeOverlay() {\r\n  let welcomeDiv = document.getElementById(\"welcome\")\r\n  let canvas = document.getElementById(\"canvas\")\r\n\r\n  window.overlayCanvas.style.opacity = 0;\r\n  delete window.overlayCanvas;\r\n  canvas.parentNode.removeChild(canvas)\r\n  welcomeDiv.parentNode.removeChild(welcomeDiv);\r\n}\r\n","const placesData = [\r\n    {\r\n        id: 1,\r\n        name: \"La Valette, Malta\",\r\n        pos: {lat: 35.896166, lng: 14.509160}\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Reykjavík, Iceland\",\r\n        pos: {lat: 64.146525, lng: -21.942597}\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Cape Canaveral, Florida, US\",\r\n        pos: {lat: 28.39221, lng: -80.60771}\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Morijim, Goa, India\",\r\n        pos: {lat: 15.620607, lng: 73.731076}\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Costa Rica\",\r\n        pos: {lat: 9.74891, lng: -83.753428}\r\n    }\r\n]\r\n\r\nexport default placesData","import React from \"react\"\r\n\r\nconst Place = (props) => {\r\n    return (\r\n        <div className=\"place\">\r\n            <p  style={{cursor: \"pointer\", width: '100%'}}\r\n                onClick={() => {\r\n                    let currentZoom = props.map.getZoom()\r\n                    let offset = 0;\r\n                    if(currentZoom > 8){\r\n                        setTimeout(()=>{\r\n                            props.map.setZoom(8)\r\n                        })\r\n                    } else {offset = 900}\r\n                    if(currentZoom > 4){\r\n                        setTimeout(()=>{\r\n                            props.map.setZoom(4)\r\n                        }, 900-offset)\r\n                    } else {offset = 1600}\r\n                    if(currentZoom > 3){\r\n                        setTimeout(()=>{\r\n                            props.map.setZoom(2)\r\n                        }, 1600-offset)\r\n                    } else {offset = 1900}\r\n                    setTimeout(() => {\r\n                        props.map.panTo(props.pos)\r\n                    }, 2000-offset)\r\n                    setTimeout(() => {\r\n                        props.map.setZoom(4)\r\n                    }, 2900-offset)\r\n                    setTimeout(() => {\r\n                        props.map.setZoom(8)\r\n                    }, 3200-offset)\r\n                    setTimeout(() => {\r\n                        props.map.setZoom(12)\r\n                    }, 4100-offset)\r\n                }\r\n            }>\r\n              {props.name}              \r\n            </p>\r\n            <button className=\"xButton\" onClick={props.handleDelete} style={{position: 'relative', border: '0px', background: 'none', marginTop: '2%', left: '5%'}}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Place","export const geocodeByAddress = address => {\r\n  const geocoder = new window.google.maps.Geocoder();\r\n  const OK = window.google.maps.GeocoderStatus.OK;\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    geocoder.geocode({ address }, (results, status) => {\r\n      if (status !== OK) {\r\n        reject(status);\r\n      }\r\n      resolve(results);\r\n    });\r\n  });\r\n};\r\n  \r\nexport const getLatLng = result => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      const latLng = {\r\n        lat: result.geometry.location.lat(),\r\n        lng: result.geometry.location.lng(),\r\n      };\r\n      resolve(latLng);\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n};\r\n\r\nexport const geocodeByPlaceId = placeId => {\r\n  const geocoder = new window.google.maps.Geocoder();\r\n  const OK = window.google.maps.GeocoderStatus.OK;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    geocoder.geocode({ placeId }, (results, status) => {\r\n      if (status !== OK) {\r\n        reject(status);\r\n      }\r\n      resolve(results);\r\n    });\r\n  });\r\n};","import React from 'react'\r\nimport { geocodeByAddress, getLatLng } from '../util/GeocodeByAdress';\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tautocomplete: this.props.autocomplete,\r\n\t\t\tquery: \"\",\r\n\t\t\tpos: {}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tsetTimeout(()=>{\r\n\t\t\tthis.setState({\r\n\t\t\t\tautocomplete: this.props.autocomplete,\r\n\t\t\t\tquery: \"\"\r\n\t\t\t});\r\n\t\t\tthis.state.autocomplete.addListener('place_changed', this.handlePlaceSelect); \r\n\t\t}, 1000)\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tconst {value} = event.target\r\n\t\tthis.setState({ query: value })\r\n\t}\r\n\r\n\thandleClick = () => {\r\n\t\tlet placeData = {\r\n\t\t\tname: this.state.query,\r\n\t\t\tpos: this.state.pos\r\n\t\t}\r\n\t\tthis.props.handleAddPlace(placeData)\r\n\t\tthis.setState({\r\n\t\t\tquery: \"\",\r\n\t\t\tpos: {}\r\n\t\t})\r\n\t}\r\n\r\n\tgetPos = async address => {\r\n\t\tlet result = await geocodeByAddress(address)\r\n\t\t.then(async geocode => {\r\n\t\t\treturn await getLatLng(geocode[0])\r\n\t\t})\r\n\t\t.then(latLng => {\r\n\t\t\treturn latLng\r\n\t\t})\r\n\t\treturn result\r\n\t}\r\n\r\n\thandlePlaceSelect = async () => {\r\n\t\tconst address = this.state.autocomplete.getPlace().formatted_address;\r\n\t\tconst pos = await this.getPos(address)\r\n\r\n\t\tif (address) {\r\n\t\t  this.setState(\r\n\t\t\t{\r\n\t\t\t  query: address,\r\n\t\t\t  pos: pos\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div id=\"searchBarDiv\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"searchBar\"\r\n\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\tname=\"query\"\r\n\t\t\t\t\tplaceholder=\"Search for places to visit...\"\r\n\t\t\t\t\tvalue={this.state.query}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"addButton\"\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t>Add</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default SearchBar\r\n","import React from 'react';\r\nimport Place from './Place'\r\nimport SearchBar from './SearchBar';\r\n\r\nconst  PlaceContainer = (props) => {\r\n  const places =\r\n    props.places.map((place, index) =>\r\n      <Place\r\n        map={props.map}\r\n        key={place.id}\r\n        name={place.name}\r\n        pos={place.pos}\r\n        handleDelete={props.handleDeletePlace.bind(this, index)}\r\n      />)\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar \r\n        autocomplete ={props.autocomplete}\r\n        handleAddPlace={props.handleAddPlace}\r\n      />\r\n    \r\n      <div className=\"places\">\r\n        <h1>Places to Visit</h1>\r\n        {places}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default PlaceContainer;\r\n","import React from 'react'\r\n\r\nclass Map extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n      map: this.props.map,\r\n    }\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tsetTimeout(()=>{\r\n\t\t\tthis.setState({\r\n\t\t\t\tmap: this.props.map\r\n      });\r\n\t\t}, 1000)\r\n  }\r\n  \r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n        <div id=\"map\">\r\n          \r\n        </div>\r\n      </div>      \r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Map","import React from 'react';\r\nimport placesData from '../placesData'\r\nimport PlaceContainer from \"./PlaceContainer\"\r\nimport Map from \"./Map\"\r\n\r\nclass MainContainer extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n          map: null,\r\n          autocomplete: null,\r\n          markers: [],\r\n          uniquePlaceId: 4,\r\n          places: placesData\r\n        }\r\n        this.loadMaps();\r\n    }\r\n\r\n    // Google Maps Init\r\n    initMaps = () => {\r\n        let map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n            center: {lat: 46.35355, lng: 19.447616},\r\n            zoom: 3,\r\n        });\r\n        map.setOptions({minZoom: 3, maxZoom: 15})\r\n\r\n        let autocomplete = new window.google.maps.places.Autocomplete(document.getElementById(\"searchBar\"))    \r\n        autocomplete.setFields(['address_components', 'formatted_address']);\r\n\r\n        const markers = this.state.places.map((place) => {\r\n            return this.addMarker(place, map)\r\n        })\r\n        \r\n        this.setState({\r\n            map: map,\r\n            autocomplete: autocomplete,\r\n            markers: markers\r\n        },)\r\n    }\r\n\r\n    loadMaps = () => {\r\n        loadScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqg_-lwa3fsOr7a1cDpkr1RJMet2nwXQE&language=en&libraries=places&callback=initMaps\")\r\n        window.initMaps = this.initMaps\r\n    }\r\n\r\n    // Marker handling functions\r\n    addMarker = (place, map) => {\r\n        let marker = {\r\n            id: place.id,\r\n            marker: new window.google.maps.Marker({\r\n                position: place.pos,\r\n                map: map,\r\n                title: place.name\r\n            })\r\n        }\r\n\r\n        marker.marker.addListener('click', () => {\r\n            if(marker.infowindow) marker.infowindow.close()\r\n\r\n            marker.infowindow = new window.google.maps.InfoWindow({\r\n                content: place.name + `, lat: ${place.pos.lat}, lon: ${place.pos.lng}`\r\n                });\r\n            marker.infowindow.open(map, marker.marker);\r\n            map.panTo(place.pos)\r\n        });\r\n\r\n        this.setState(prevState => ({\r\n            markers: [...prevState.markers, marker]\r\n        }))\r\n        return marker;\r\n    }\r\n\r\n    removeMarker = (id) => {\r\n        console.log(id)\r\n        const markers = [...this.state.markers]\r\n        const updatedMarkers = markers.filter((element)=>{\r\n            if(element.id === id){\r\n                element.marker.setMap(null)\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n        return updatedMarkers\r\n    }\r\n\r\n    // Places state handling functions\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n        this.setState({ [name]: value})\r\n    }\r\n\r\n    handleAddPlace = (placeData) => {\r\n        let place = {\r\n            id: this.state.uniquePlaceId,\r\n            name: placeData.name,\r\n            pos: placeData.pos\r\n        }\r\n        const updatedPlaces = [...this.state.places, place]\r\n\r\n        this.setState({\r\n            uniquePlaceId: this.state.uniquePlaceId + 1,\r\n            places: updatedPlaces\r\n        }, () => this.addMarker(place, this.state.map))\r\n    }\r\n\r\n    handleDeletePlace = (index) => {\r\n        const updatedPlaces = [...this.state.places]\r\n        const updatedMarkers = this.removeMarker(updatedPlaces[index].id)\r\n\r\n        updatedPlaces.splice(index, 1)\r\n\r\n        this.setState({\r\n            places: updatedPlaces,\r\n            markers: updatedMarkers\r\n        })\r\n    }\r\n    \r\n      render(){\r\n        return(\r\n          <main>\r\n            <PlaceContainer \r\n                map={this.state.map}\r\n                autocomplete={this.state.autocomplete}\r\n                places={this.state.places}\r\n                handleAddPlace={this.handleAddPlace}\r\n                handleDeletePlace={this.handleDeletePlace}\r\n            />\r\n            <Map\r\n                map={this.state.map}\r\n                places={this.state.places}\r\n                markers={this.state.markers}\r\n            />\r\n          </main>\r\n        )\r\n      }\r\n}\r\n\r\nexport default MainContainer\r\n\r\nfunction loadScript(url){\r\n    let index = window.document.getElementsByTagName(\"script\")[0]\r\n    let script = window.document.createElement(\"script\")\r\n    script.src = url\r\n    script.async = false\r\n    script.defer = false\r\n    index.parentNode.insertBefore(script, index)\r\n  }","import React from 'react';\r\nimport './App.css';\r\n\r\nimport WelcomeInfo from './components/WelcomeInfo';\r\nimport MainContainer from './components/MainContainer';\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n    return (\r\n    \t<div>\r\n\t    \t<WelcomeInfo />\r\n\t    \t<MainContainer />\r\n    \t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}