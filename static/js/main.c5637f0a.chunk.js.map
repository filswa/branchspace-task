{"version":3,"sources":["placesData.js","components/Place.js","util/GeocodeByAdress.js","components/SearchBar.js","components/PlaceContainer.js","components/Map.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["placesData","id","name","pos","lat","lng","Place","props","react_default","a","createElement","className","style","cursor","width","onClick","currentZoom","map","getZoom","offset","setTimeout","setZoom","panTo","handleDelete","position","marginTop","height","geocodeByAddress","address","geocoder","window","google","maps","Geocoder","OK","GeocoderStatus","Promise","resolve","reject","geocode","results","status","getLatLng","result","geometry","location","e","SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","value","target","setState","query","handleClick","placeData","state","handleAddPlace","getPos","_ref","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","then","_ref2","_callee","_context","abrupt","sent","stop","_x2","apply","arguments","latLng","_x","handlePlaceSelect","_callee3","_context3","autocomplete","getPlace","formatted_address","_this2","addListener","type","placeholder","onChange","React","Component","PlaceContainer","places","place","index","components_Place","key","handleDeletePlace","bind","components_SearchBar","Map","MainContainer","initMaps","document","getElementById","center","zoom","setOptions","minZoom","maxZoom","Autocomplete","setFields","markers","addMarker","loadMaps","url","getElementsByTagName","script","src","async","defer","parentNode","insertBefore","loadScript","marker","Marker","title","infowindow","close","InfoWindow","content","concat","open","prevState","toConsumableArray","removeMarker","console","log","filter","element","setMap","_event$target","defineProperty","uniquePlaceId","updatedPlaces","updatedMarkers","splice","components_PlaceContainer","components_Map","App","components_MainContainer","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5637f0a.chunk.js","sourcesContent":["const placesData = [\r\n    {\r\n        id: 1,\r\n        name: \"La Valette, Malta\",\r\n        pos: {lat: 35.896166, lng: 14.509160}\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"ReykjavÃ­k, Iceland\",\r\n        pos: {lat: 64.146525, lng: -21.942597}\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Cape Canaveral, Florida, US\",\r\n        pos: {lat: 28.39221, lng: -80.60771}\r\n        //28.3922182, lon: -80.60771319999999\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Morijim, Goa, India\",\r\n        pos: {lat: 15.620607, lng: 73.731076}\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Costa Rica\",\r\n        pos: {lat: 9.74891, lng: -83.753428}\r\n    }\r\n]\r\n\r\nexport default placesData","import React from \"react\"\r\n\r\nconst Place = (props) => {\r\n    return (\r\n        <div className=\"place\">\r\n            <p  style={{cursor: \"pointer\", width: '100%'}}\r\n                onClick={() => {\r\n                    let currentZoom = props.map.getZoom()\r\n                    let offset = 0;\r\n                    if(currentZoom > 8){\r\n                        setTimeout(()=>{\r\n                            props.map.setZoom(8)\r\n                        })\r\n                    } else {offset = 900}\r\n                    if(currentZoom > 4){\r\n                        setTimeout(()=>{\r\n                            props.map.setZoom(4)\r\n                        }, 900-offset)                        \r\n                    } else {offset = 1600}\r\n                    setTimeout(() => {\r\n                        props.map.panTo(props.pos)\r\n                    }, 1700-offset)\r\n                    setTimeout(() => {\r\n                        props.map.setZoom(8)\r\n                    }, 2600-offset)\r\n                    setTimeout(() => {\r\n                        props.map.setZoom(12)\r\n                    }, 3500-offset)\r\n                }\r\n            }>\r\n              {props.name}              \r\n            </p>\r\n            <button onClick={props.handleDelete} style={{position: 'relative', marginTop: '5%', width: '8%', height: '50%'}}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Place","export const geocodeByAddress = address => {\r\n  const geocoder = new window.google.maps.Geocoder();\r\n  const OK = window.google.maps.GeocoderStatus.OK;\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    geocoder.geocode({ address }, (results, status) => {\r\n      if (status !== OK) {\r\n        reject(status);\r\n      }\r\n      resolve(results);\r\n    });\r\n  });\r\n};\r\n  \r\nexport const getLatLng = result => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      const latLng = {\r\n        lat: result.geometry.location.lat(),\r\n        lng: result.geometry.location.lng(),\r\n      };\r\n      resolve(latLng);\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n};\r\n\r\nexport const geocodeByPlaceId = placeId => {\r\n  const geocoder = new window.google.maps.Geocoder();\r\n  const OK = window.google.maps.GeocoderStatus.OK;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    geocoder.geocode({ placeId }, (results, status) => {\r\n      if (status !== OK) {\r\n        reject(status);\r\n      }\r\n      resolve(results);\r\n    });\r\n  });\r\n};","import React from 'react'\r\nimport { geocodeByAddress, getLatLng } from '../util/GeocodeByAdress';\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tautocomplete: this.props.autocomplete,\r\n\t\t\tquery: \"\",\r\n\t\t\tpos: {}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tsetTimeout(()=>{\r\n\t\t\tthis.setState({\r\n\t\t\t\tautocomplete: this.props.autocomplete,\r\n\t\t\t\tquery: \"\"\r\n\t\t\t});\r\n\t\t\tthis.state.autocomplete.addListener('place_changed', this.handlePlaceSelect); \r\n\t\t}, 1000)\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tconst {value} = event.target\r\n\t\tthis.setState({ query: value })\r\n\t}\r\n\r\n\thandleClick = () => {\r\n\t\tlet placeData = {\r\n\t\t\tname: this.state.query,\r\n\t\t\tpos: this.state.pos\r\n\t\t}\r\n\t\tthis.props.handleAddPlace(placeData)\r\n\t\tthis.setState({\r\n\t\t\tquery: \"\",\r\n\t\t\tpos: {}\r\n\t\t})\r\n\t}\r\n\r\n\tgetPos = async address => {\r\n\t\tlet result = await geocodeByAddress(address)\r\n\t\t.then(async geocode => {\r\n\t\t\treturn await getLatLng(geocode[0])\r\n\t\t})\r\n\t\t.then(latLng => {\r\n\t\t\treturn latLng\r\n\t\t})\r\n\t\treturn result\r\n\t}\r\n\r\n\thandlePlaceSelect = async () => {\r\n\t\tconst address = this.state.autocomplete.getPlace().formatted_address;\r\n\t\tconst pos = await this.getPos(address)\r\n\r\n\t\tif (address) {\r\n\t\t  this.setState(\r\n\t\t\t{\r\n\t\t\t  query: address,\r\n\t\t\t  pos: pos\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div id=\"searchBarDiv\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"searchBar\"\r\n\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\tname=\"query\"\r\n\t\t\t\t\tplaceholder=\"Search for places to visit...\"\r\n\t\t\t\t\tvalue={this.state.query}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"addButton\"\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t>Add</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default SearchBar\r\n","import React from 'react';\r\nimport Place from './Place'\r\nimport SearchBar from './SearchBar';\r\n\r\nconst  PlaceContainer = (props) => {\r\n  const places =\r\n    props.places.map((place, index) =>\r\n      <Place\r\n        map={props.map}\r\n        key={place.id}\r\n        name={place.name}\r\n        pos={place.pos}\r\n        handleDelete={props.handleDeletePlace.bind(this, index)}\r\n      />)\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar \r\n        autocomplete ={props.autocomplete}\r\n        handleAddPlace={props.handleAddPlace}\r\n      />\r\n    \r\n      <div className=\"places\">\r\n        <h1>Places to Visit</h1>\r\n        {places}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default PlaceContainer;\r\n","import React from 'react'\r\n\r\nclass Map extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n      map: this.props.map,\r\n    }\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tsetTimeout(()=>{\r\n\t\t\tthis.setState({\r\n\t\t\t\tmap: this.props.map\r\n      });\r\n\t\t}, 1000)\r\n  }\r\n  \r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n        <div id=\"map\">\r\n          \r\n        </div>\r\n      </div>      \r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Map","import React from 'react';\r\nimport placesData from '../placesData'\r\nimport PlaceContainer from \"./PlaceContainer\"\r\nimport Map from \"./Map\"\r\n\r\nclass MainContainer extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n          map: null,\r\n          autocomplete: null,\r\n          markers: [],\r\n          uniquePlaceId: 4,\r\n          places: placesData\r\n        }\r\n        this.loadMaps();\r\n    }\r\n\r\n    // Google Maps Init\r\n    initMaps = () => {\r\n        let map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n            center: {lat: 43.896860, lng: 20.447616},\r\n            zoom: 4,\r\n        });\r\n        map.setOptions({minZoom: 3, maxZoom: 15})\r\n\r\n        let autocomplete = new window.google.maps.places.Autocomplete(document.getElementById(\"searchBar\"))    \r\n        autocomplete.setFields(['address_components', 'formatted_address']);\r\n\r\n        const markers = this.state.places.map((place) => {\r\n            return this.addMarker(place, map)\r\n        })\r\n        \r\n        this.setState({\r\n            map: map,\r\n            autocomplete: autocomplete,\r\n            markers: markers\r\n        },)\r\n    }\r\n\r\n    loadMaps = () => {\r\n        loadScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCqg_-lwa3fsOr7a1cDpkr1RJMet2nwXQE&language=en&libraries=places&callback=initMaps\")\r\n        window.initMaps = this.initMaps\r\n    }\r\n\r\n    // Marker handling functions\r\n    addMarker = (place, map) => {\r\n        let marker = {\r\n            id: place.id,\r\n            marker: new window.google.maps.Marker({\r\n                position: place.pos,\r\n                map: map,\r\n                title: place.name\r\n            })\r\n        }\r\n\r\n        marker.marker.addListener('click', () => {\r\n            if(marker.infowindow) marker.infowindow.close()\r\n\r\n            marker.infowindow = new window.google.maps.InfoWindow({\r\n                content: place.name + `, lat: ${place.pos.lat}, lon: ${place.pos.lng}`\r\n                });\r\n            marker.infowindow.open(map, marker.marker);\r\n            map.panTo(place.pos)\r\n        });\r\n\r\n        this.setState(prevState => ({\r\n            markers: [...prevState.markers, marker]\r\n        }))\r\n        return marker;\r\n    }\r\n\r\n    removeMarker = (id) => {\r\n        console.log(id)\r\n        const markers = [...this.state.markers]\r\n        const updatedMarkers = markers.filter((element)=>{\r\n            if(element.id === id){\r\n                element.marker.setMap(null)\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n        return updatedMarkers\r\n    }\r\n\r\n    // Places state handling functions\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n        this.setState({ [name]: value})\r\n    }\r\n\r\n    handleAddPlace = (placeData) => {\r\n        let place = {\r\n            id: this.state.uniquePlaceId,\r\n            name: placeData.name,\r\n            pos: placeData.pos\r\n        }\r\n        const updatedPlaces = [...this.state.places, place]\r\n\r\n        this.setState({\r\n            uniquePlaceId: this.state.uniquePlaceId + 1,\r\n            places: updatedPlaces\r\n        }, () => this.addMarker(place, this.state.map))\r\n    }\r\n\r\n    handleDeletePlace = (index) => {\r\n        const updatedPlaces = [...this.state.places]\r\n        const updatedMarkers = this.removeMarker(updatedPlaces[index].id)\r\n\r\n        updatedPlaces.splice(index, 1)\r\n\r\n        this.setState({\r\n            places: updatedPlaces,\r\n            markers: updatedMarkers\r\n        })\r\n    }\r\n    \r\n      render(){\r\n        return(\r\n          <main>\r\n            <PlaceContainer \r\n                map={this.state.map}\r\n                autocomplete={this.state.autocomplete}\r\n                places={this.state.places}\r\n                handleAddPlace={this.handleAddPlace}\r\n                handleDeletePlace={this.handleDeletePlace}\r\n            />\r\n            <Map\r\n                map={this.state.map}\r\n                places={this.state.places}\r\n                markers={this.state.markers}\r\n            />\r\n          </main>\r\n        )\r\n      }\r\n}\r\n\r\nexport default MainContainer\r\n\r\nfunction loadScript(url){\r\n    let index = window.document.getElementsByTagName(\"script\")[0]\r\n    let script = window.document.createElement(\"script\")\r\n    script.src = url\r\n    script.async = false\r\n    script.defer = false\r\n    index.parentNode.insertBefore(script, index)\r\n  }","import React from 'react';\r\nimport './App.css';\r\n\r\nimport MainContainer from './components/MainContainer';\r\n\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n    return <MainContainer />\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}